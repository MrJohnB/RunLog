@page "/activities/{ActivityId}/edit"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ApiSettings Settings
@using LiteBulb.RunLog.Dtos

<h3>Edit Activity</h3>
<p>Use the form below to edit this activity</p>

<EditForm Model="@activity" OnValidSubmit="HandleValidSubmitAsync">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label for="activityId">Activity Id</label>
		<InputNumber id="activityId" @bind-Value="@activity.Id" class="form-control" readonly="true" />
	</div>
	<ActivityForm Activity="@activity" ReadOnly="false" />

	<button type="submit" class="btn btn-primary">Update</button>
	<button type="button" @onclick="HandleCancel" class="btn btn-primary">Cancel</button>
</EditForm>

@code {
	[Parameter]
	public string ActivityId { get; set; }

	private ActivityDto activity = new ActivityDto();

	protected override async Task OnInitializedAsync()
	{
		if (!int.TryParse(ActivityId, out int result))
		{
			Console.WriteLine($"Error while trying to parse Activity Id passed in.  The value: '{ActivityId}' is not a valid integer.");
			Navigation.NavigateTo($"/activities");
			return;
		}

		activity = await Http.GetFromJsonAsync<ActivityDto>($"{Settings.ActivitiesRequestUri}/{ActivityId}");

		if (activity == null)
		{
			Console.WriteLine($"Error while sending GET request to API for Activity object with id: '{ActivityId}'.");
			return;
		}

		Console.WriteLine($"Activity object with id: '{ActivityId}' was found successfully.");
	}

	private async Task HandleValidSubmitAsync()
	{
		var responseMessage = await Http.PutAsJsonAsync($"{Settings.ActivitiesRequestUri}/{activity.Id}", activity);

		if (!responseMessage.IsSuccessStatusCode)
		{
			Console.WriteLine($"Error while sending PUT request to API for Activity object with id: '{activity.Id}'.  StatusCode: {responseMessage.StatusCode}.");
			return;
		}

		Console.WriteLine($"Activity object with id: '{activity.Id}' was updated successfully.");
		Navigation.NavigateTo("/activities");
	}

	private void HandleCancel()
	{
		Navigation.NavigateTo("/activities");
	}
}
