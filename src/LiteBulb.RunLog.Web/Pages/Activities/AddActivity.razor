@page "/activities/add"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ApiSettings Settings
@using LiteBulb.RunLog.Dtos

<h3>Add Activity</h3>
<p>Use the form below to create a new activity</p>

<div class="action-buttons">
	<button type="button" @onclick="HandleCancel" class="btn btn-primary action-button" title="Cancel and Go Back"><span class="oi oi-caret-left"></span><span class="d-none">Cancel</span></button>
</div>

<EditForm Model="@activity" OnValidSubmit="HandleValidSubmitAsync">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<ActivityForm Activity="@activity" ReadOnly="false" />

	<button type="submit" class="btn btn-primary" title="Submit the Fields">Submit</button>
</EditForm>

@code {
	private ActivityDto activity = new ActivityDto();

	private void InitializeActivity()
	{
		this.activity = new ActivityDto()
		{
			CreatedAt = DateTime.Now,
		};
	}

	protected override void OnInitialized()
	{
		InitializeActivity();
	}

	private async Task HandleValidSubmitAsync()
	{
		var responseMessage = await Http.PostAsJsonAsync<ActivityDto>(Settings.ActivitiesRequestUri, activity);

		if (!responseMessage.IsSuccessStatusCode)
		{
			Console.WriteLine($"Error while sending POST request to API for Activity object.  StatusCode: {responseMessage.StatusCode}.");
			return;
		}

		var createdActivity = await responseMessage.Content.ReadFromJsonAsync<ActivityDto>();

		Console.WriteLine($"Activity object with id: '{createdActivity.Id}' was created successfully.");
		Navigation.NavigateTo("/activities");
		// Or: Reset the form
		//InitializeActivity();
	}

	private void HandleCancel()
	{
		Navigation.NavigateTo("/activities");

		//TODO: maybe send to ViewActivity?
	}
}