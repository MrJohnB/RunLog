@page "/activities/{ActivityId}/positions/{PositionId}"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ApiSettings Settings
@using LiteBulb.RunLog.Dtos

<h3>View Position</h3>
<p>Position details</p>

<div class="action-buttons">
	<button type="button" @onclick="HandleBack" class="btn btn-primary action-button" title="Go Back to Activity Screen"><span class="oi oi-caret-left"></span><span class="d-none">Back</span></button>
	<a href="/activities/@position.ActivityId/positions/@position.Id/edit" class="btn btn-primary action-button" title="Edit Position"><span class="oi oi-pencil"></span><span class="d-none">Edit</span></a>
	<a href="/activities/@position.ActivityId/positions/@position.Id/delete" class="btn btn-primary action-button" title="Delete Position"><span class="oi oi-trash"></span><span class="d-none">Delete</span></a>
</div>

<EditForm Model="@position">

	<div class="form-group">
		<label for="positionId">Position Id</label>
		<InputNumber id="positionId" @bind-Value="@position.Id" class="form-control" readonly="true" />
	</div>

	<PositionForm Position="@position" ReadOnly="true" />
</EditForm>

@code {
	[Parameter]
	public string ActivityId { get; set; }

	[Parameter]
	public string PositionId { get; set; }

	private PositionDto position = new PositionDto();

	protected override async Task OnInitializedAsync()
	{
		position = await Http.GetFromJsonAsync<PositionDto>($"{Settings.PositionsRequestUri}/{PositionId}");

		//TODO: check for 404 status code

		if (position == null)
		{
			Console.WriteLine($"Error while sending GET request to API for Position object with id: '{PositionId}'.");
			return;
		}

		Console.WriteLine($"Position object with id: '{PositionId}' was found successfully.");
	}

	private void HandleBack()
	{
		Navigation.NavigateTo($"/activities/{ActivityId}");
	}
}
